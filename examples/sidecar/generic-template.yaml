apiVersion: v1
kind: Template
metadata:
  name: generic-template
  annotations:
    description: "A generic template which creates a DeploymentConfig, Service and Route for a given docker image"
    tags: "webserver"
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    name: ${NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - kind: ServiceAccount
    name: ${NAME}
    namespace: ${NAMESPACE}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${NAME}-nginx-config
  data:
    app-nginx.conf: |
      server {
        listen 8081;
        index index.html index.htm;

        location / {
         proxy_pass http://localhost:8080/;
        }
      }
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        serviceAccountName: ${NAME}
        containers:
        - image: ${DOCKER_IMAGE}
          imagePullPolicy: Always
          name: application
          ports:
          - containerPort: "${{CONTAINER_PORT}}"
            protocol: TCP
          terminationMessagePath: /dev/termination-log
        - image: twalter/openshift-nginx:stable-alpine
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 8081
            protocol: TCP
          volumeMounts:
          - mountPath: /etc/nginx/conf.d/
            name: nginx-config-volume
        initContainers:
        - name: init-mydb
          image: busybox
          command: ['sh', '-c', 'until nslookup mydb; do echo waiting for mydb; sleep 2; done;']
        volumes:
        - configMap:
            defaultMode: 420
            name: ${NAME}-nginx-config
          name: nginx-config-volume
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    ports:
    - port: 8081
      protocol: TCP
      targetPort: 8081
      name: http
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    port:
      targetPort: 8081
    to:
      kind: Service
      name: ${NAME}
parameters:
- name: NAME
  description: The name for the deployment config, service and route
  required: true
- name: NAMESPACE
  description: The namespace for the RBAC
  required: true
- name: DOCKER_IMAGE
  description:
  required: true
- name: CONTAINER_PORT
  description: The port which will be exposed as service and route
  value: "8080"
