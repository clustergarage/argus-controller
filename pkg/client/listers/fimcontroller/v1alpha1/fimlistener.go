// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "clustergarage.io/fim-k8s/pkg/apis/fimcontroller/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FimListenerLister helps list FimListeners.
type FimListenerLister interface {
	// List lists all FimListeners in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.FimListener, err error)
	// FimListeners returns an object that can list and get FimListeners.
	FimListeners(namespace string) FimListenerNamespaceLister
	FimListenerListerExpansion
}

// fimListenerLister implements the FimListenerLister interface.
type fimListenerLister struct {
	indexer cache.Indexer
}

// NewFimListenerLister returns a new FimListenerLister.
func NewFimListenerLister(indexer cache.Indexer) FimListenerLister {
	return &fimListenerLister{indexer: indexer}
}

// List lists all FimListeners in the indexer.
func (s *fimListenerLister) List(selector labels.Selector) (ret []*v1alpha1.FimListener, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FimListener))
	})
	return ret, err
}

// FimListeners returns an object that can list and get FimListeners.
func (s *fimListenerLister) FimListeners(namespace string) FimListenerNamespaceLister {
	return fimListenerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FimListenerNamespaceLister helps list and get FimListeners.
type FimListenerNamespaceLister interface {
	// List lists all FimListeners in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.FimListener, err error)
	// Get retrieves the FimListener from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.FimListener, error)
	FimListenerNamespaceListerExpansion
}

// fimListenerNamespaceLister implements the FimListenerNamespaceLister
// interface.
type fimListenerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FimListeners in the indexer for a given namespace.
func (s fimListenerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FimListener, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FimListener))
	})
	return ret, err
}

// Get retrieves the FimListener from the indexer for a given namespace and name.
func (s fimListenerNamespaceLister) Get(name string) (*v1alpha1.FimListener, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("fimlistener"), name)
	}
	return obj.(*v1alpha1.FimListener), nil
}
