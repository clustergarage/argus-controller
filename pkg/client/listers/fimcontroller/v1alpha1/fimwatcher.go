// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "clustergarage.io/fim-k8s/pkg/apis/fimcontroller/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FimWatcherLister helps list FimWatchers.
type FimWatcherLister interface {
	// List lists all FimWatchers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.FimWatcher, err error)
	// FimWatchers returns an object that can list and get FimWatchers.
	FimWatchers(namespace string) FimWatcherNamespaceLister
	FimWatcherListerExpansion
}

// fimWatcherLister implements the FimWatcherLister interface.
type fimWatcherLister struct {
	indexer cache.Indexer
}

// NewFimWatcherLister returns a new FimWatcherLister.
func NewFimWatcherLister(indexer cache.Indexer) FimWatcherLister {
	return &fimWatcherLister{indexer: indexer}
}

// List lists all FimWatchers in the indexer.
func (s *fimWatcherLister) List(selector labels.Selector) (ret []*v1alpha1.FimWatcher, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FimWatcher))
	})
	return ret, err
}

// FimWatchers returns an object that can list and get FimWatchers.
func (s *fimWatcherLister) FimWatchers(namespace string) FimWatcherNamespaceLister {
	return fimWatcherNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FimWatcherNamespaceLister helps list and get FimWatchers.
type FimWatcherNamespaceLister interface {
	// List lists all FimWatchers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.FimWatcher, err error)
	// Get retrieves the FimWatcher from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.FimWatcher, error)
	FimWatcherNamespaceListerExpansion
}

// fimWatcherNamespaceLister implements the FimWatcherNamespaceLister
// interface.
type fimWatcherNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FimWatchers in the indexer for a given namespace.
func (s fimWatcherNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FimWatcher, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FimWatcher))
	})
	return ret, err
}

// Get retrieves the FimWatcher from the indexer for a given namespace and name.
func (s fimWatcherNamespaceLister) Get(name string) (*v1alpha1.FimWatcher, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("fimwatcher"), name)
	}
	return obj.(*v1alpha1.FimWatcher), nil
}
